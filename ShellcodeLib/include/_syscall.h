#ifndef __SYSCALL_H__
#define __SYSCALL_H__
#include <unistd.h>
#include <sys/syscall.h>
size_t _syscall(size_t number, ...);

#define _read(fd, buf, count) _syscall(__NR_read, fd, buf, count)
#define _write(fd, buf, count) _syscall(__NR_write, fd, buf, count)
#define _open(filename, flags, mode) _syscall(__NR_open, filename, flags, mode)
#define _close(fd) _syscall(__NR_close, fd)
#define _stat(filename, statbuf) _syscall(__NR_stat, filename, statbuf)
#define _fstat(fd, statbuf) _syscall(__NR_fstat, fd, statbuf)
#define _lstat(filename, statbuf) _syscall(__NR_lstat, filename, statbuf)
#define _poll(ufds, nfds, timeout_msecs) _syscall(__NR_poll, ufds, nfds, timeout_msecs)
#define _lseek(fd, offset, whence) _syscall(__NR_lseek, fd, offset, whence)
#define _mprotect(start, len, prot) _syscall(__NR_mprotect, start, len, prot)
#define _mmap(addr, len, prot, flags, fd, offset) _syscall(__NR_mmap, addr, len, prot, flags, fd, offset)
#define _munmap(addr, len) _syscall(__NR_munmap, addr, len)
#define _brk(brk) _syscall(__NR_brk, brk)
#define _rt_sigprocmask(how, nset, oset, sigsetsize) _syscall(__NR_rt_sigprocmask, how, nset, oset, sigsetsize)
#define _ioctl(fd, cmd, arg) _syscall(__NR_ioctl, fd, cmd, arg)
#define _readv(fd, vec, vlen) _syscall(__NR_readv, fd, vec, vlen)
#define _writev(fd, vec, vlen) _syscall(__NR_writev, fd, vec, vlen)
#define _access(filename, mode) _syscall(__NR_access, filename, mode)
#define _pipe(fildes) _syscall(__NR_pipe, fildes)
#define _select(n, inp, outp, exp, tvp) _syscall(__NR_select, n, inp, outp, exp, tvp)
#define _mremap(addr, old_len, new_len, flags, new_addr) _syscall(__NR_mremap, addr, old_len, new_len, flags, new_addr)
#define _msync(start, len, flags) _syscall(__NR_msync, start, len, flags)
#define _mincore(start, len, vec) _syscall(__NR_mincore, start, len, vec)
#define _madvise(start, len_in, behavior) _syscall(__NR_madvise, start, len_in, behavior)
#define _shmget(key, size, shmflg) _syscall(__NR_shmget, key, size, shmflg)
#define _shmat(shmid, shmaddr, shmflg) _syscall(__NR_shmat, shmid, shmaddr, shmflg)
#define _shmctl(shmid, cmd, buf) _syscall(__NR_shmctl, shmid, cmd, buf)
#define _dup(fildes) _syscall(__NR_dup, fildes)
#define _dup2(oldfd, newfd) _syscall(__NR_dup2, oldfd, newfd)
#define _nanosleep(rqtp, rmtp) _syscall(__NR_nanosleep, rqtp, rmtp)
#define _getitimer(which, value) _syscall(__NR_getitimer, which, value)
#define _alarm(seconds) _syscall(__NR_alarm, seconds)
#define _setitimer(which, value, ovalue) _syscall(__NR_setitimer, which, value, ovalue)
#define _sendfile(out_fd, in_fd, offset, count) _syscall(__NR_sendfile, out_fd, in_fd, offset, count)
#define _socket(family, type, protocol) _syscall(__NR_socket, family, type, protocol)
#define _connect(fd, uservaddr, addrlen) _syscall(__NR_connect, fd, uservaddr, addrlen)
#define _accept(fd, upeer_sockaddr, upeer_addrlen) _syscall(__NR_accept, fd, upeer_sockaddr, upeer_addrlen)
#define _sendto(fd, buff, len, flags, addr, addr_len) _syscall(__NR_sendto, fd, buff, len, flags, addr, addr_len)
#define _recvfrom(fd, buf, len, flags, addr, addrlen) _syscall(__NR_recvfrom, fd, buf, len, flags, addr, addrlen)
#define _sendmsg(fd, msg, flags) _syscall(__NR_sendmsg, fd, msg, flags)
#define _recvmsg(fd, msg, flags) _syscall(__NR_recvmsg, fd, msg, flags)
#define _shutdown(fd, how) _syscall(__NR_shutdown, fd, how)
#define _bind(fd, umyaddr, addrlen) _syscall(__NR_bind, fd, umyaddr, addrlen)
#define _listen(fd, backlog) _syscall(__NR_listen, fd, backlog)
#define _getsockname(fd, usockaddr, usockaddr_len) _syscall(__NR_getsockname, fd, usockaddr, usockaddr_len)
#define _getpeername(fd, usockaddr, usockaddr_len) _syscall(__NR_getpeername, fd, usockaddr, usockaddr_len)
#define _socketpair(family, type, protocol, usockvec) _syscall(__NR_socketpair, family, type, protocol, usockvec)
#define _setsockopt(fd, level, optname, optval, optlen) _syscall(__NR_setsockopt, fd, level, optname, optval, optlen)
#define _getsockopt(fd, level, optname, optval, optlen) _syscall(__NR_getsockopt, fd, level, optname, optval, optlen)
#define _execve(filename, argv, envp) _syscall(__NR_execve, filename, argv, envp)
#define _exit(error_code) _syscall(__NR_exit, error_code)
#define _wait4(pid, stat_addr, options, ru) _syscall(__NR_wait4, pid, stat_addr, options, ru)
#define _kill(pid, sig) _syscall(__NR_kill, pid, sig)
#define _uname(name) _syscall(__NR_uname, name)
#define _semget(key, nsems, semflg) _syscall(__NR_semget, key, nsems, semflg)
#define _semop(semid, tsops, nsops) _syscall(__NR_semop, semid, tsops, nsops)
#define _semctl(semid, semnum, cmd, arg) _syscall(__NR_semctl, semid, semnum, cmd, arg)
#define _shmdt(shmaddr) _syscall(__NR_shmdt, shmaddr)
#define _msgget(key, msgflg) _syscall(__NR_msgget, key, msgflg)
#define _msgsnd(msqid, msgp, msgsz, msgflg) _syscall(__NR_msgsnd, msqid, msgp, msgsz, msgflg)
#define _msgrcv(msqid, msgp, msgsz, msgtyp, msgflg) _syscall(__NR_msgrcv, msqid, msgp, msgsz, msgtyp, msgflg)
#define _msgctl(msqid, cmd, buf) _syscall(__NR_msgctl, msqid, cmd, buf)
#define _fcntl(fd, cmd, arg) _syscall(__NR_fcntl, fd, cmd, arg)
#define _flock(fd, cmd) _syscall(__NR_flock, fd, cmd)
#define _fsync(fd) _syscall(__NR_fsync, fd)
#define _fdatasync(fd) _syscall(__NR_fdatasync, fd)
#define _truncate(path, length) _syscall(__NR_truncate, path, length)
#define _ftruncate(fd, length) _syscall(__NR_ftruncate, fd, length)
#define _getdents(fd, dirent, count) _syscall(__NR_getdents, fd, dirent, count)
#define _getcwd(buf, size) _syscall(__NR_getcwd, buf, size)
#define _chdir(filename) _syscall(__NR_chdir, filename)
#define _fchdir(fd) _syscall(__NR_fchdir, fd)
#define _rename(oldname, newname) _syscall(__NR_rename, oldname, newname)
#define _mkdir(pathname, mode) _syscall(__NR_mkdir, pathname, mode)
#define _rmdir(pathname) _syscall(__NR_rmdir, pathname)
#define _creat(pathname, mode) _syscall(__NR_creat, pathname, mode)
#define _link(oldname, newname) _syscall(__NR_link, oldname, newname)
#define _unlink(pathname) _syscall(__NR_unlink, pathname)
#define _symlink(oldname, newname) _syscall(__NR_symlink, oldname, newname)
#define _readlink(path, buf, bufsiz) _syscall(__NR_readlink, path, buf, bufsiz)
#define _chmod(filename, mode) _syscall(__NR_chmod, filename, mode)
#define _fchmod(fd, mode) _syscall(__NR_fchmod, fd, mode)
#define _chown(filename, user, group) _syscall(__NR_chown, filename, user, group)
#define _fchown(fd, user, group) _syscall(__NR_fchown, fd, user, group)
#define _lchown(filename, user, group) _syscall(__NR_lchown, filename, user, group)
#define _umask(mask) _syscall(__NR_umask, mask)
#define _gettimeofday(tv, tz) _syscall(__NR_gettimeofday, tv, tz)
#define _getrlimit(resource, rlim) _syscall(__NR_getrlimit, resource, rlim)
#define _getrusage(who, ru) _syscall(__NR_getrusage, who, ru)
#define _sysinfo(info) _syscall(__NR_sysinfo, info)
#define _times(tbuf) _syscall(__NR_times, tbuf)
#define _ptrace(request, pid, addr, data) _syscall(__NR_ptrace, request, pid, addr, data)
#define _syslog(type, buf, len) _syscall(__NR_syslog, type, buf, len)
#define _setuid(uid) _syscall(__NR_setuid, uid)
#define _setgid(gid) _syscall(__NR_setgid, gid)
#define _setpgid(pid, pgid) _syscall(__NR_setpgid, pid, pgid)
#define _setreuid(ruid, euid) _syscall(__NR_setreuid, ruid, euid)
#define _setregid(rgid, egid) _syscall(__NR_setregid, rgid, egid)
#define _getgroups(gidsetsize, grouplist) _syscall(__NR_getgroups, gidsetsize, grouplist)
#define _setgroups(gidsetsize, grouplist) _syscall(__NR_setgroups, gidsetsize, grouplist)
#define _setresuid(ruid, euid, suid) _syscall(__NR_setresuid, ruid, euid, suid)
#define _getresuid(ruidp, euidp, suidp) _syscall(__NR_getresuid, ruidp, euidp, suidp)
#define _setresgid(rgid, egid, sgid) _syscall(__NR_setresgid, rgid, egid, sgid)
#define _getresgid(rgidp, egidp, sgidp) _syscall(__NR_getresgid, rgidp, egidp, sgidp)
#define _getpgid(pid) _syscall(__NR_getpgid, pid)
#define _setfsuid(uid) _syscall(__NR_setfsuid, uid)
#define _setfsgid(gid) _syscall(__NR_setfsgid, gid)
#define _getsid(pid) _syscall(__NR_getsid, pid)
#define _capget(header, dataptr) _syscall(__NR_capget, header, dataptr)
#define _capset(header, data) _syscall(__NR_capset, header, data)
#define _rt_sigpending(uset, sigsetsize) _syscall(__NR_rt_sigpending, uset, sigsetsize)
#define _rt_sigtimedwait(uthese, uinfo, uts, sigsetsize) _syscall(__NR_rt_sigtimedwait, uthese, uinfo, uts, sigsetsize)
#define _rt_sigqueueinfo(pid, sig, uinfo) _syscall(__NR_rt_sigqueueinfo, pid, sig, uinfo)
#define _rt_sigsuspend(unewset, sigsetsize) _syscall(__NR_rt_sigsuspend, unewset, sigsetsize)
#define _sigaltstack(uss_ptr, uoss_ptr) _syscall(__NR_sigaltstack, uss_ptr, uoss_ptr)
#define _utime(filename, times) _syscall(__NR_utime, filename, times)
#define _mknod(filename, mode, dev) _syscall(__NR_mknod, filename, mode, dev)
#define _uselib(library) _syscall(__NR_uselib, library)
#define _personality(personality) _syscall(__NR_personality, personality)
#define _ustat(dev, u) _syscall(__NR_ustat, dev, u)
#define _statfs(pathname, buf) _syscall(__NR_statfs, pathname, buf)
#define _fstatfs(fd, buf) _syscall(__NR_fstatfs, fd, buf)
#define _sysfs(option, arg1, arg2) _syscall(__NR_sysfs, option, arg1, arg2)
#define _getpriority(which, who) _syscall(__NR_getpriority, which, who)
#define _setpriority(which, who, niceval) _syscall(__NR_setpriority, which, who, niceval)
#define _sched_setparam(pid, param) _syscall(__NR_sched_setparam, pid, param)
#define _sched_getparam(pid, param) _syscall(__NR_sched_getparam, pid, param)
#define _sched_setscheduler(pid, policy, param) _syscall(__NR_sched_setscheduler, pid, policy, param)
#define _sched_getscheduler(pid) _syscall(__NR_sched_getscheduler, pid)
#define _sched_get_priority_max(policy) _syscall(__NR_sched_get_priority_max, policy)
#define _sched_get_priority_min(policy) _syscall(__NR_sched_get_priority_min, policy)
#define _sched_rr_get_interval(pid, interval) _syscall(__NR_sched_rr_get_interval, pid, interval)
#define _mlock(start, len) _syscall(__NR_mlock, start, len)
#define _munlock(start, len) _syscall(__NR_munlock, start, len)
#define _mlockall(flags) _syscall(__NR_mlockall, flags)
#define _modify_ldt(func, ptr, bytecount) _syscall(__NR_modify_ldt, func, ptr, bytecount)
#define _pivot_root(new_root, put_old) _syscall(__NR_pivot_root, new_root, put_old)
#define _prctl(option, arg2, arg3, arg4, arg5) _syscall(__NR_prctl, option, arg2, arg3, arg4, arg5)
#define _arch_prctl(option, arg2) _syscall(__NR_arch_prctl, option, arg2)
#define _adjtimex(txc_p) _syscall(__NR_adjtimex, txc_p)
#define _setrlimit(resource, rlim) _syscall(__NR_setrlimit, resource, rlim)
#define _chroot(filename) _syscall(__NR_chroot, filename)
#define _acct(name) _syscall(__NR_acct, name)
#define _settimeofday(tv, tz) _syscall(__NR_settimeofday, tv, tz)
#define _mount(dev_name, dir_name, type, flags, data) _syscall(__NR_mount, dev_name, dir_name, type, flags, data)
#define _swapon(specialfile, swap_flags) _syscall(__NR_swapon, specialfile, swap_flags)
#define _swapoff(specialfile) _syscall(__NR_swapoff, specialfile)
#define _reboot(magic1, magic2, cmd, arg) _syscall(__NR_reboot, magic1, magic2, cmd, arg)
#define _sethostname(name, len) _syscall(__NR_sethostname, name, len)
#define _setdomainname(name, len) _syscall(__NR_setdomainname, name, len)
#define _iopl(level) _syscall(__NR_iopl, level)
#define _ioperm(from, num, turn_on) _syscall(__NR_ioperm, from, num, turn_on)
#define _init_module(umod, len, uargs) _syscall(__NR_init_module, umod, len, uargs)
#define _delete_module(name_user, flags) _syscall(__NR_delete_module, name_user, flags)
#define _quotactl(cmd, special, id, addr) _syscall(__NR_quotactl, cmd, special, id, addr)
#define _readahead(fd, offhi, offlo, count) _syscall(__NR_readahead, fd, offhi, offlo, count)
#define _setxattr(pathname, name, value, size, flags) _syscall(__NR_setxattr, pathname, name, value, size, flags)
#define _lsetxattr(pathname, name, value, size, flags) _syscall(__NR_lsetxattr, pathname, name, value, size, flags)
#define _fsetxattr(fd, name, value, size, flags) _syscall(__NR_fsetxattr, fd, name, value, size, flags)
#define _getxattr(pathname, name, value, size) _syscall(__NR_getxattr, pathname, name, value, size)
#define _lgetxattr(pathname, name, value, size) _syscall(__NR_lgetxattr, pathname, name, value, size)
#define _fgetxattr(fd, name, value, size) _syscall(__NR_fgetxattr, fd, name, value, size)
#define _listxattr(pathname, list, size) _syscall(__NR_listxattr, pathname, list, size)
#define _llistxattr(pathname, list, size) _syscall(__NR_llistxattr, pathname, list, size)
#define _flistxattr(fd, list, size) _syscall(__NR_flistxattr, fd, list, size)
#define _removexattr(pathname, name) _syscall(__NR_removexattr, pathname, name)
#define _lremovexattr(pathname, name) _syscall(__NR_lremovexattr, pathname, name)
#define _fremovexattr(fd, name) _syscall(__NR_fremovexattr, fd, name)
#define _tkill(pid, sig) _syscall(__NR_tkill, pid, sig)
#define _time(tloc) _syscall(__NR_time, tloc)
#define _futex(uaddr, op, val, utime, uaddr2, val3) _syscall(__NR_futex, uaddr, op, val, utime, uaddr2, val3)
#define _sched_setaffinity(pid, len, user_mask_ptr) _syscall(__NR_sched_setaffinity, pid, len, user_mask_ptr)
#define _sched_getaffinity(pid, len, user_mask_ptr) _syscall(__NR_sched_getaffinity, pid, len, user_mask_ptr)
#define _io_setup(nr_events, ctx32p) _syscall(__NR_io_setup, nr_events, ctx32p)
#define _io_destroy(ctx) _syscall(__NR_io_destroy, ctx)
#define _io_getevents(ctx_id, min_nr, nr, events, timeout) _syscall(__NR_io_getevents, ctx_id, min_nr, nr, events, timeout)
#define _io_submit(ctx_id, nr, iocbpp) _syscall(__NR_io_submit, ctx_id, nr, iocbpp)
#define _io_cancel(ctx_id, iocb, result) _syscall(__NR_io_cancel, ctx_id, iocb, result)
#define _get_thread_area(u_info) _syscall(__NR_get_thread_area, u_info)
#define _epoll_create(size) _syscall(__NR_epoll_create, size)
#define _remap_file_pages(start, size, prot, pgoff, flags) _syscall(__NR_remap_file_pages, start, size, prot, pgoff, flags)
#define _getdents64(fd, dirent, count) _syscall(__NR_getdents64, fd, dirent, count)
#define _set_tid_address(tidptr) _syscall(__NR_set_tid_address, tidptr)
#define _semtimedop(semid, tsops, nsops, timeout) _syscall(__NR_semtimedop, semid, tsops, nsops, timeout)
#define _fadvise64(fd, offhi, offlo, len, advice) _syscall(__NR_fadvise64, fd, offhi, offlo, len, advice)
#define _timer_create(which_clock, timer_event_spec, created_timer_id) _syscall(__NR_timer_create, which_clock, timer_event_spec, created_timer_id)
#define _timer_settime(timer_id, flags, new_setting, old_setting) _syscall(__NR_timer_settime, timer_id, flags, new_setting, old_setting)
#define _timer_gettime(timer_id, setting) _syscall(__NR_timer_gettime, timer_id, setting)
#define _timer_getoverrun(timer_id) _syscall(__NR_timer_getoverrun, timer_id)
#define _timer_delete(timer_id) _syscall(__NR_timer_delete, timer_id)
#define _clock_settime(which_clock, tp) _syscall(__NR_clock_settime, which_clock, tp)
#define _clock_gettime(which_clock, tp) _syscall(__NR_clock_gettime, which_clock, tp)
#define _clock_getres(which_clock, tp) _syscall(__NR_clock_getres, which_clock, tp)
#define _clock_nanosleep(which_clock, flags, rqtp, rmtp) _syscall(__NR_clock_nanosleep, which_clock, flags, rqtp, rmtp)
#define _exit_group(error_code) _syscall(__NR_exit_group, error_code)
#define _epoll_wait(epfd, events, maxevents, timeout) _syscall(__NR_epoll_wait, epfd, events, maxevents, timeout)
#define _epoll_ctl(epfd, op, fd, event) _syscall(__NR_epoll_ctl, epfd, op, fd, event)
#define _tgkill(tgid, pid, sig) _syscall(__NR_tgkill, tgid, pid, sig)
#define _utimes(filename, utimes) _syscall(__NR_utimes, filename, utimes)
#define _mbind(start, len, mode, nmask, maxnode, flags) _syscall(__NR_mbind, start, len, mode, nmask, maxnode, flags)
#define _set_mempolicy(mode, nmask, maxnode) _syscall(__NR_set_mempolicy, mode, nmask, maxnode)
#define _get_mempolicy(policy, nmask, maxnode, addr, flags) _syscall(__NR_get_mempolicy, policy, nmask, maxnode, addr, flags)
#define _mq_open(u_name, oflag, mode, u_attr) _syscall(__NR_mq_open, u_name, oflag, mode, u_attr)
#define _mq_unlink(u_name) _syscall(__NR_mq_unlink, u_name)
#define _mq_timedsend(mqdes, u_msg_ptr, msg_len, msg_prio, u_abs_timeout) _syscall(__NR_mq_timedsend, mqdes, u_msg_ptr, msg_len, msg_prio, u_abs_timeout)
#define _mq_timedreceive(mqdes, u_msg_ptr, msg_len, u_msg_prio, u_abs_timeout) _syscall(__NR_mq_timedreceive, mqdes, u_msg_ptr, msg_len, u_msg_prio, u_abs_timeout)
#define _mq_notify(mqdes, u_notification) _syscall(__NR_mq_notify, mqdes, u_notification)
#define _mq_getsetattr(mqdes, u_mqstat, u_omqstat) _syscall(__NR_mq_getsetattr, mqdes, u_mqstat, u_omqstat)
#define _kexec_load(entry, nr_segments, segments, flags) _syscall(__NR_kexec_load, entry, nr_segments, segments, flags)
#define _waitid(which, pid, infop, options, uru) _syscall(__NR_waitid, which, pid, infop, options, uru)
#define _add_key(_type, _description, _payload, plen, ringid) _syscall(__NR_add_key, _type, _description, _payload, plen, ringid)
#define _request_key(_type, _description, _callout_info, destringid) _syscall(__NR_request_key, _type, _description, _callout_info, destringid)
#define _keyctl(option, arg2, arg3, arg4, arg5) _syscall(__NR_keyctl, option, arg2, arg3, arg4, arg5)
#define _ioprio_set(which, who, ioprio) _syscall(__NR_ioprio_set, which, who, ioprio)
#define _ioprio_get(which, who) _syscall(__NR_ioprio_get, which, who)
#define _inotify_add_watch(fd, pathname, mask) _syscall(__NR_inotify_add_watch, fd, pathname, mask)
#define _inotify_rm_watch(fd, wd) _syscall(__NR_inotify_rm_watch, fd, wd)
#define _migrate_pages(pid, maxnode, old_nodes, new_nodes) _syscall(__NR_migrate_pages, pid, maxnode, old_nodes, new_nodes)
#define _openat(dfd, filename, flags, mode) _syscall(__NR_openat, dfd, filename, flags, mode)
#define _mkdirat(dfd, pathname, mode) _syscall(__NR_mkdirat, dfd, pathname, mode)
#define _mknodat(dfd, filename, mode, dev) _syscall(__NR_mknodat, dfd, filename, mode, dev)
#define _fchownat(dfd, filename, user, group, flag) _syscall(__NR_fchownat, dfd, filename, user, group, flag)
#define _futimesat(dfd, filename, utimes) _syscall(__NR_futimesat, dfd, filename, utimes)
#define _newfstatat(dfd, filename, statbuf, flag) _syscall(__NR_newfstatat, dfd, filename, statbuf, flag)
#define _unlinkat(dfd, pathname, flag) _syscall(__NR_unlinkat, dfd, pathname, flag)
#define _renameat(olddfd, oldname, newdfd, newname) _syscall(__NR_renameat, olddfd, oldname, newdfd, newname)
#define _linkat(olddfd, oldname, newdfd, newname, flags) _syscall(__NR_linkat, olddfd, oldname, newdfd, newname, flags)
#define _symlinkat(oldname, newdfd, newname) _syscall(__NR_symlinkat, oldname, newdfd, newname)
#define _readlinkat(dfd, pathname, buf, bufsiz) _syscall(__NR_readlinkat, dfd, pathname, buf, bufsiz)
#define _fchmodat(dfd, filename, mode) _syscall(__NR_fchmodat, dfd, filename, mode)
#define _faccessat(dfd, filename, mode) _syscall(__NR_faccessat, dfd, filename, mode)
#define _pselect6(n, inp, outp, exp, tsp, sig) _syscall(__NR_pselect6, n, inp, outp, exp, tsp, sig)
#define _ppoll(ufds, nfds, tsp, sigmask, sigsetsize) _syscall(__NR_ppoll, ufds, nfds, tsp, sigmask, sigsetsize)
#define _unshare(unshare_flags) _syscall(__NR_unshare, unshare_flags)
#define _set_robust_list(head, len) _syscall(__NR_set_robust_list, head, len)
#define _get_robust_list(pid, head_ptr, len_ptr) _syscall(__NR_get_robust_list, pid, head_ptr, len_ptr)
#define _splice(fd_in, off_in, fd_out, off_out, len, flags) _syscall(__NR_splice, fd_in, off_in, fd_out, off_out, len, flags)
#define _tee(fdin, fdout, len, flags) _syscall(__NR_tee, fdin, fdout, len, flags)
#define _sync_file_range(fd, off_high, off_low, nb_high, nb_low, flags) _syscall(__NR_sync_file_range, fd, off_high, off_low, nb_high, nb_low, flags)
#define _vmsplice(fd, uiov, nr_segs, flags) _syscall(__NR_vmsplice, fd, uiov, nr_segs, flags)
#define _move_pages(pid, nr_pages, pages, nodes, status, flags) _syscall(__NR_move_pages, pid, nr_pages, pages, nodes, status, flags)
#define _utimensat(dfd, filename, utimes, flags) _syscall(__NR_utimensat, dfd, filename, utimes, flags)
#define _epoll_pwait(epfd, events, maxevents, timeout, sigmask, sigsetsize) _syscall(__NR_epoll_pwait, epfd, events, maxevents, timeout, sigmask, sigsetsize)
#define _signalfd(ufd, user_mask, sigsetsize) _syscall(__NR_signalfd, ufd, user_mask, sigsetsize)
#define _eventfd(count) _syscall(__NR_eventfd, count)
#define _fallocate(fd, mode, offhi, offlo, lenhi, lenlo) _syscall(__NR_fallocate, fd, mode, offhi, offlo, lenhi, lenlo)
#define _timerfd_settime(ufd, flags, utmr, otmr) _syscall(__NR_timerfd_settime, ufd, flags, utmr, otmr)
#define _timerfd_gettime(ufd, otmr) _syscall(__NR_timerfd_gettime, ufd, otmr)
#define _accept4(fd, upeer_sockaddr, upeer_addrlen, flags) _syscall(__NR_accept4, fd, upeer_sockaddr, upeer_addrlen, flags)
#define _signalfd4(ufd, user_mask, sigsetsize, flags) _syscall(__NR_signalfd4, ufd, user_mask, sigsetsize, flags)
#define _eventfd2(count, flags) _syscall(__NR_eventfd2, count, flags)
#define _epoll_create1(flags) _syscall(__NR_epoll_create1, flags)
#define _dup3(oldfd, newfd, flags) _syscall(__NR_dup3, oldfd, newfd, flags)
#define _pipe2(fildes, flags) _syscall(__NR_pipe2, fildes, flags)
#define _inotify_init1(flags) _syscall(__NR_inotify_init1, flags)
#define _preadv(fd, vec, vlen, pos_low, pos_high) _syscall(__NR_preadv, fd, vec, vlen, pos_low, pos_high)
#define _pwritev(fd, vec, vlen, pos_low, pos_high) _syscall(__NR_pwritev, fd, vec, vlen, pos_low, pos_high)
#define _rt_tgsigqueueinfo(tgid, pid, sig, uinfo) _syscall(__NR_rt_tgsigqueueinfo, tgid, pid, sig, uinfo)
#define _perf_event_open(attr_uptr, pid, cpu, group_fd, flags) _syscall(__NR_perf_event_open, attr_uptr, pid, cpu, group_fd, flags)
#define _recvmmsg(fd, mmsg, vlen, flags, timeout) _syscall(__NR_recvmmsg, fd, mmsg, vlen, flags, timeout)
#define _fanotify_init(flags, event_f_flags) _syscall(__NR_fanotify_init, flags, event_f_flags)
#define _fanotify_mark(fanotify_fd, flags, mask, dfd, pathname) _syscall(__NR_fanotify_mark, fanotify_fd, flags, mask, dfd, pathname)
#define _prlimit64(pid, resource, new_rlim, old_rlim) _syscall(__NR_prlimit64, pid, resource, new_rlim, old_rlim)
#define _name_to_handle_at(dfd, name, handle, mnt_id, flag) _syscall(__NR_name_to_handle_at, dfd, name, handle, mnt_id, flag)
#define _open_by_handle_at(mountdirfd, handle, flags) _syscall(__NR_open_by_handle_at, mountdirfd, handle, flags)
#define _clock_adjtime(which_clock, utx) _syscall(__NR_clock_adjtime, which_clock, utx)
#define _syncfs(fd) _syscall(__NR_syncfs, fd)
#define _sendmmsg(fd, mmsg, vlen, flags) _syscall(__NR_sendmmsg, fd, mmsg, vlen, flags)
#define _setns(fd, flags) _syscall(__NR_setns, fd, flags)
#define _getcpu(cpup, nodep, unused) _syscall(__NR_getcpu, cpup, nodep, unused)
#define _process_vm_readv(pid, lvec, liovcnt, rvec, riovcnt, flags) _syscall(__NR_process_vm_readv, pid, lvec, liovcnt, rvec, riovcnt, flags)
#define _process_vm_writev(pid, lvec, liovcnt, rvec, riovcnt, flags) _syscall(__NR_process_vm_writev, pid, lvec, liovcnt, rvec, riovcnt, flags)
#define _kcmp(pid1, pid2, type, idx1, idx2) _syscall(__NR_kcmp, pid1, pid2, type, idx1, idx2)
#define _finit_module(fd, uargs, flags) _syscall(__NR_finit_module, fd, uargs, flags)
#define _sched_setattr(pid, uattr, flags) _syscall(__NR_sched_setattr, pid, uattr, flags)
#define _sched_getattr(pid, uattr, usize, flags) _syscall(__NR_sched_getattr, pid, uattr, usize, flags)
#define _renameat2(olddfd, oldname, newdfd, newname, flags) _syscall(__NR_renameat2, olddfd, oldname, newdfd, newname, flags)
#define _seccomp(op, flags, uargs) _syscall(__NR_seccomp, op, flags, uargs)
#define _getrandom(buf, count, flags) _syscall(__NR_getrandom, buf, count, flags)
#define _memfd_create(uname, flags) _syscall(__NR_memfd_create, uname, flags)
#define _kexec_file_load(kernel_fd, initrd_fd, cmdline_len, cmdline_ptr, flags) _syscall(__NR_kexec_file_load, kernel_fd, initrd_fd, cmdline_len, cmdline_ptr, flags)
#define _bpf(cmd, uattr, size) _syscall(__NR_bpf, cmd, uattr, size)
#define _execveat(fd, filename, argv, envp, flags) _syscall(__NR_execveat, fd, filename, argv, envp, flags)
#define _userfaultfd(flags) _syscall(__NR_userfaultfd, flags)
#define _membarrier(cmd, flags, cpu_id) _syscall(__NR_membarrier, cmd, flags, cpu_id)
#define _mlock2(start, len, flags) _syscall(__NR_mlock2, start, len, flags)
#define _copy_file_range(fd_in, off_in, fd_out, off_out, len, flags) _syscall(__NR_copy_file_range, fd_in, off_in, fd_out, off_out, len, flags)
#define _preadv2(fd, vec, vlen, pos_low, pos_high, flags) _syscall(__NR_preadv2, fd, vec, vlen, pos_low, pos_high, flags)
#define _pwritev2(fd, vec, vlen, pos_low, pos_high, flags) _syscall(__NR_pwritev2, fd, vec, vlen, pos_low, pos_high, flags)
#define _pkey_mprotect(start, len, prot, pkey) _syscall(__NR_pkey_mprotect, start, len, prot, pkey)
#define _pkey_alloc(flags, init_val) _syscall(__NR_pkey_alloc, flags, init_val)
#define _pkey_free(pkey) _syscall(__NR_pkey_free, pkey)
#define _statx(dfd, filename, flags, mask, buffer) _syscall(__NR_statx, dfd, filename, flags, mask, buffer)
#define _io_pgetevents(ctx_id, min_nr, nr, events, timeout, usig) _syscall(__NR_io_pgetevents, ctx_id, min_nr, nr, events, timeout, usig)
#define _rseq(rseq, rseq_len, flags, sig) _syscall(__NR_rseq, rseq, rseq_len, flags, sig)
#define _pidfd_send_signal(pidfd, sig, info, flags) _syscall(__NR_pidfd_send_signal, pidfd, sig, info, flags)
#define _io_uring_setup(entries, params) _syscall(__NR_io_uring_setup, entries, params)
#define _io_uring_enter(fd, to_submit, min_complete, flags, argp, argsz) _syscall(__NR_io_uring_enter, fd, to_submit, min_complete, flags, argp, argsz)
#define _io_uring_register(fd, opcode, arg, nr_args) _syscall(__NR_io_uring_register, fd, opcode, arg, nr_args)
#define _open_tree(dfd, filename, flags) _syscall(__NR_open_tree, dfd, filename, flags)
#define _move_mount(from_dfd, from_pathname, to_dfd, to_pathname, flags) _syscall(__NR_move_mount, from_dfd, from_pathname, to_dfd, to_pathname, flags)
#define _fsopen(_fs_name, flags) _syscall(__NR_fsopen, _fs_name, flags)
#define _fsconfig(fd, cmd, _key, _value, aux) _syscall(__NR_fsconfig, fd, cmd, _key, _value, aux)
#define _fsmount(fs_fd, flags, attr_flags) _syscall(__NR_fsmount, fs_fd, flags, attr_flags)
#define _fspick(dfd, path, flags) _syscall(__NR_fspick, dfd, path, flags)
#define _pidfd_open(pid, flags) _syscall(__NR_pidfd_open, pid, flags)
#define _clone3(uargs, size) _syscall(__NR_clone3, uargs, size)
#define _openat2(dfd, filename, how, usize) _syscall(__NR_openat2, dfd, filename, how, usize)
#define _pidfd_getfd(pidfd, fd, flags) _syscall(__NR_pidfd_getfd, pidfd, fd, flags)

#endif
